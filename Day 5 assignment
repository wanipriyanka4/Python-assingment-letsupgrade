Que1:-arr[0,1,2,10,4,0,56,2,0,1,3,0,56,0,4] sort increasing order but all zeros should be at right hand side

def pushZerosToEnd(arr, n): 
    count = 0 
      
    
    for i in range(n): 
        if arr[i] != 0: 
              
            
            arr[count] = arr[i] 
            count+=1
      
 
    while count < n: 
        arr[count] = 0
        count += 1
          

arr = [0,1,2,10,4,0,56,2,0,1,3,0,56,0,4] 
n = len(arr) 
pushZerosToEnd(arr, n) 
print("Array after pushing all zeros to end of array:") 
print(arr) 


Que 2:- arr1 = [10,20,40,60,70,80] and arr2 = [5,15,25,35,45,60]
merge two arrays in python but use only one loop each other while loop of for only one time

def mergeArrays(arr1, arr2, n1, n2): 
    arr3 = [None] * (n1 + n2) 
    i = 0
    j = 0
    k = 0
  
    while i < n1 and j < n2: 
    
        if arr1[i] < arr2[j]: 
            arr3[k] = arr1[i] 
            k = k + 1
            i = i + 1
        else: 
            arr3[k] = arr2[j] 
            k = k + 1
            j = j + 1
      
        while i < n1: 
        arr3[k] = arr1[i]; 
        k = k + 1
        i = i + 1
 
 while j < n2: 
        arr3[k] = arr2[j]; 
        k = k + 1
        j = j + 1
    print("Array after merging") 
    for i in range(n1 + n2): 
        print(str(arr3[i]), end = " ") 
 
arr1 = [10,20,40,60,70,80] 
n1 = len(arr1) 
  
arr2 = [5,15,25,35,45,60] 
n2 = len(arr2) 
mergeArrays(arr1, arr2, n1, n2); 


